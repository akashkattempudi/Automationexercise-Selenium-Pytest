{"uid":"881ed63d49528296","name":"test_remove_products_cart","fullName":"selenium_tests.pytest_pages.test_remove_products_cart#test_remove_products_cart","historyId":"48ed634b0e5aa2279b4a6fc8ae77b9c5","time":{"start":1755437602121,"stop":1755437605852,"duration":3731},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-product-id=\"1\" class=\"btn btn-default add-to-cart\">...</a> is not clickable at point (622, 677). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"min-height: auto; max-height: none; min-width: auto; max-width: none; width: 728px !important; height: 90px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"728\" height=\"90\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20250814/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-1677597403311019&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CLWU6Nb6kY8DFcY3rQYdU_ggiQ\" data-load-complete=\"true\"></iframe>\n  (Session info: MicrosoftEdge=139.0.3405.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff748fa81f5+23461]\n\t(No symbol) [0x0x7ff748efc2e0]\n\tGetHandleVerifier [0x0x7ff749220128+2611928]\n\t(No symbol) [0x0x7ff748d1fd35]\n\t(No symbol) [0x0x7ff748d1dce3]\n\t(No symbol) [0x0x7ff748d1b75d]\n\t(No symbol) [0x0x7ff748d1a928]\n\t(No symbol) [0x0x7ff748d0fbfe]\n\t(No symbol) [0x0x7ff748d3a6ba]\n\t(No symbol) [0x0x7ff748d0f58d]\n\t(No symbol) [0x0x7ff748d0f44d]\n\t(No symbol) [0x0x7ff748d3a980]\n\t(No symbol) [0x0x7ff748d0f58d]\n\t(No symbol) [0x0x7ff748d5754f]\n\t(No symbol) [0x0x7ff748d3a423]\n\t(No symbol) [0x0x7ff748d0ea86]\n\t(No symbol) [0x0x7ff748d0dd11]\n\t(No symbol) [0x0x7ff748d0e8b3]\n\t(No symbol) [0x0x7ff748e0dd3d]\n\t(No symbol) [0x0x7ff748e1b0c8]\n\tGetHandleVerifier [0x0x7ff74908803b+940523]\n\tGetHandleVerifier [0x0x7ff749090d91+976705]\n\t(No symbol) [0x0x7ff748f09ed1]\n\t(No symbol) [0x0x7ff748f028b4]\n\t(No symbol) [0x0x7ff748f02a03]\n\t(No symbol) [0x0x7ff748ef44a6]\n\tBaseThreadInitThunk [0x0x7ff8085de8d7+23]\n\tRtlUserThreadStart [0x0x7ff80899c34c+44]","statusTrace":"driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"dbbfaf049c563b60df1fc88258030648\")>\n\n    def test_remove_products_cart(driver):\n        cart_page = remove_products_cart_page(driver)\n>       cart_page.add_product_to_cart()   # Ensure at least one product is in the cart\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nselenium_tests\\pytest_pages\\test_remove_products_cart.py:5: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nselenium_tests\\pages\\remove_products_cart_page.py:18: in add_product_to_cart\n    add_cart.add_first_product_to_cart().view_cart()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nselenium_tests\\pages\\add_products_cart_page.py:23: in add_first_product_to_cart\n    add_btn.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001935EC13350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...[0x0x7ff748ef44a6]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff8085de8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ff80899c34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-product-id=\"1\" class=\"btn btn-default add-to-cart\">...</a> is not clickable at point (622, 677). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"min-height: auto; max-height: none; min-width: auto; max-width: none; width: 728px !important; height: 90px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"728\" height=\"90\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20250814/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-1677597403311019&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CLWU6Nb6kY8DFcY3rQYdU_ggiQ\" data-load-complete=\"true\"></iframe>\nE         (Session info: MicrosoftEdge=139.0.3405.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff748fa81f5+23461]\nE       \t(No symbol) [0x0x7ff748efc2e0]\nE       \tGetHandleVerifier [0x0x7ff749220128+2611928]\nE       \t(No symbol) [0x0x7ff748d1fd35]\nE       \t(No symbol) [0x0x7ff748d1dce3]\nE       \t(No symbol) [0x0x7ff748d1b75d]\nE       \t(No symbol) [0x0x7ff748d1a928]\nE       \t(No symbol) [0x0x7ff748d0fbfe]\nE       \t(No symbol) [0x0x7ff748d3a6ba]\nE       \t(No symbol) [0x0x7ff748d0f58d]\nE       \t(No symbol) [0x0x7ff748d0f44d]\nE       \t(No symbol) [0x0x7ff748d3a980]\nE       \t(No symbol) [0x0x7ff748d0f58d]\nE       \t(No symbol) [0x0x7ff748d5754f]\nE       \t(No symbol) [0x0x7ff748d3a423]\nE       \t(No symbol) [0x0x7ff748d0ea86]\nE       \t(No symbol) [0x0x7ff748d0dd11]\nE       \t(No symbol) [0x0x7ff748d0e8b3]\nE       \t(No symbol) [0x0x7ff748e0dd3d]\nE       \t(No symbol) [0x0x7ff748e1b0c8]\nE       \tGetHandleVerifier [0x0x7ff74908803b+940523]\nE       \tGetHandleVerifier [0x0x7ff749090d91+976705]\nE       \t(No symbol) [0x0x7ff748f09ed1]\nE       \t(No symbol) [0x0x7ff748f028b4]\nE       \t(No symbol) [0x0x7ff748f02a03]\nE       \t(No symbol) [0x0x7ff748ef44a6]\nE       \tBaseThreadInitThunk [0x0x7ff8085de8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff80899c34c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1755437597626,"stop":1755437602121,"duration":4495},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-product-id=\"1\" class=\"btn btn-default add-to-cart\">...</a> is not clickable at point (622, 677). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"min-height: auto; max-height: none; min-width: auto; max-width: none; width: 728px !important; height: 90px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"728\" height=\"90\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20250814/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-1677597403311019&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CLWU6Nb6kY8DFcY3rQYdU_ggiQ\" data-load-complete=\"true\"></iframe>\n  (Session info: MicrosoftEdge=139.0.3405.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff748fa81f5+23461]\n\t(No symbol) [0x0x7ff748efc2e0]\n\tGetHandleVerifier [0x0x7ff749220128+2611928]\n\t(No symbol) [0x0x7ff748d1fd35]\n\t(No symbol) [0x0x7ff748d1dce3]\n\t(No symbol) [0x0x7ff748d1b75d]\n\t(No symbol) [0x0x7ff748d1a928]\n\t(No symbol) [0x0x7ff748d0fbfe]\n\t(No symbol) [0x0x7ff748d3a6ba]\n\t(No symbol) [0x0x7ff748d0f58d]\n\t(No symbol) [0x0x7ff748d0f44d]\n\t(No symbol) [0x0x7ff748d3a980]\n\t(No symbol) [0x0x7ff748d0f58d]\n\t(No symbol) [0x0x7ff748d5754f]\n\t(No symbol) [0x0x7ff748d3a423]\n\t(No symbol) [0x0x7ff748d0ea86]\n\t(No symbol) [0x0x7ff748d0dd11]\n\t(No symbol) [0x0x7ff748d0e8b3]\n\t(No symbol) [0x0x7ff748e0dd3d]\n\t(No symbol) [0x0x7ff748e1b0c8]\n\tGetHandleVerifier [0x0x7ff74908803b+940523]\n\tGetHandleVerifier [0x0x7ff749090d91+976705]\n\t(No symbol) [0x0x7ff748f09ed1]\n\t(No symbol) [0x0x7ff748f028b4]\n\t(No symbol) [0x0x7ff748f02a03]\n\t(No symbol) [0x0x7ff748ef44a6]\n\tBaseThreadInitThunk [0x0x7ff8085de8d7+23]\n\tRtlUserThreadStart [0x0x7ff80899c34c+44]","statusTrace":"driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"dbbfaf049c563b60df1fc88258030648\")>\n\n    def test_remove_products_cart(driver):\n        cart_page = remove_products_cart_page(driver)\n>       cart_page.add_product_to_cart()   # Ensure at least one product is in the cart\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nselenium_tests\\pytest_pages\\test_remove_products_cart.py:5: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nselenium_tests\\pages\\remove_products_cart_page.py:18: in add_product_to_cart\n    add_cart.add_first_product_to_cart().view_cart()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nselenium_tests\\pages\\add_products_cart_page.py:23: in add_first_product_to_cart\n    add_btn.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001935EC13350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...[0x0x7ff748ef44a6]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff8085de8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ff80899c34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-product-id=\"1\" class=\"btn btn-default add-to-cart\">...</a> is not clickable at point (622, 677). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"min-height: auto; max-height: none; min-width: auto; max-width: none; width: 728px !important; height: 90px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"728\" height=\"90\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20250814/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-1677597403311019&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CLWU6Nb6kY8DFcY3rQYdU_ggiQ\" data-load-complete=\"true\"></iframe>\nE         (Session info: MicrosoftEdge=139.0.3405.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff748fa81f5+23461]\nE       \t(No symbol) [0x0x7ff748efc2e0]\nE       \tGetHandleVerifier [0x0x7ff749220128+2611928]\nE       \t(No symbol) [0x0x7ff748d1fd35]\nE       \t(No symbol) [0x0x7ff748d1dce3]\nE       \t(No symbol) [0x0x7ff748d1b75d]\nE       \t(No symbol) [0x0x7ff748d1a928]\nE       \t(No symbol) [0x0x7ff748d0fbfe]\nE       \t(No symbol) [0x0x7ff748d3a6ba]\nE       \t(No symbol) [0x0x7ff748d0f58d]\nE       \t(No symbol) [0x0x7ff748d0f44d]\nE       \t(No symbol) [0x0x7ff748d3a980]\nE       \t(No symbol) [0x0x7ff748d0f58d]\nE       \t(No symbol) [0x0x7ff748d5754f]\nE       \t(No symbol) [0x0x7ff748d3a423]\nE       \t(No symbol) [0x0x7ff748d0ea86]\nE       \t(No symbol) [0x0x7ff748d0dd11]\nE       \t(No symbol) [0x0x7ff748d0e8b3]\nE       \t(No symbol) [0x0x7ff748e0dd3d]\nE       \t(No symbol) [0x0x7ff748e1b0c8]\nE       \tGetHandleVerifier [0x0x7ff74908803b+940523]\nE       \tGetHandleVerifier [0x0x7ff749090d91+976705]\nE       \t(No symbol) [0x0x7ff748f09ed1]\nE       \t(No symbol) [0x0x7ff748f028b4]\nE       \t(No symbol) [0x0x7ff748f02a03]\nE       \t(No symbol) [0x0x7ff748ef44a6]\nE       \tBaseThreadInitThunk [0x0x7ff8085de8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff80899c34c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException","steps":[],"attachments":[{"uid":"fae1711ac195b649","name":"Failure Screenshot","source":"fae1711ac195b649.png","type":"image/png","size":448810},{"uid":"447ecc5646f00941","name":"log","source":"447ecc5646f00941.txt","type":"text/plain","size":245}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1755437606066,"stop":1755437609347,"duration":3281},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"selenium_tests.pytest_pages"},{"name":"suite","value":"test_remove_products_cart"},{"name":"host","value":"MSI"},{"name":"thread","value":"6316-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"selenium_tests.pytest_pages.test_remove_products_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"881ed63d49528296.json","parameterValues":[]}