{"name": "test_add_products_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"e31933ff6f04d94961a55af8a8aef7aa\")>\n\n    def test_add_products_cart(driver):\n        # Initialize the page object\n        cart_page = add_products_cart_page(driver)\n    \n        # Add the first product to the cart\n        cart_page.add_first_product_to_cart()\n    \n        # Click \"Continue Shopping\"\n>       cart_page.continue_shopping()\n\nselenium_tests\\pytest_pages\\test_add_products_cart.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nselenium_tests\\pages\\add_products_cart_page.py:29: in continue_shopping\n    continue_btn = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e31933ff6f04d94961a55af8a8aef7aa\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000173A6C423E0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "Failure Screenshot", "source": "8b7e5aea-2a03-4b39-b67c-b65d5a8eabdb-attachment.png", "type": "image/png"}, {"name": "log", "source": "b3b1364e-face-433d-87a3-15119b108870-attachment.txt", "type": "text/plain"}], "start": 1755354898042, "stop": 1755354910789, "uuid": "c074cb74-72b9-4e20-8676-1e7ba49f2b64", "historyId": "85e4c87a46e3ec15a3d50425f3b61ff0", "testCaseId": "85e4c87a46e3ec15a3d50425f3b61ff0", "fullName": "selenium_tests.pytest_pages.test_add_products_cart#test_add_products_cart", "labels": [{"name": "parentSuite", "value": "selenium_tests.pytest_pages"}, {"name": "suite", "value": "test_add_products_cart"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "5632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "selenium_tests.pytest_pages.test_add_products_cart"}], "titlePath": ["selenium_tests", "pytest_pages", "test_add_products_cart.py"]}